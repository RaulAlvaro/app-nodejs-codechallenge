version: "3.7"
services:
  db:
    image: mongo:5
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGODB_DATABASE: transactions
    volumes:
      - ./mongo_data:/data/db
    networks:
      - challenge-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - challenge-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - challenge-network

  api-gateway-transaction:
    build:
      context: ./api-gateway-transaction
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - "kafka"
      - "db"
    networks:
      - challenge-network

  ms-anti-fraud:
    build:
      context: ./ms-anti-fraud
      dockerfile: Dockerfile
    depends_on:
      - "kafka"
      - "db"
    networks:
      - challenge-network

  ms-create-transaction-handler:
    build:
      context: ./ms-create-transaction-handler
      dockerfile: Dockerfile
    depends_on:
      - "kafka"
      - "db"
    networks:
      - challenge-network

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - "kafka"
    networks:
      - challenge-network

  logs:
    container_name: logs
    image: amir20/dozzle:latest
    ports:
      - "9999:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  challenge-network:
    driver: bridge
